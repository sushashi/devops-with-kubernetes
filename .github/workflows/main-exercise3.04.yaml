name: Release application 3.04

on:
  push:
    paths:
      - 'Part3/Exercise3.04/**'
    branches:
      - '*'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  IMAGE: dwk-project
  DEPLOYMENT: dwk-project
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud --quiet auth configure-docker

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Build
        run: |-
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE/project:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" "./project"
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" "./todo-backend"
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE/todo-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" "./todo-db"
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE/todo-job:${GITHUB_REF#refs/heads/}-$GITHUB_SHA" "./todo-job"
        working-directory: ./Part3/Exercise3.04

      - name: Publish
        run: |-
          docker push "gcr.io/$PROJECT_ID/$IMAGE/project:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$IMAGE/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$IMAGE/todo-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
          docker push "gcr.io/$PROJECT_ID/$IMAGE/todo-job:${GITHUB_REF#refs/heads/}-$GITHUB_SHA"
        working-directory: ./Part3/Exercise3.04

      - name: Sops Binary Installer
        uses: mdgreenwald/mozilla-sops-action@v1.6.0
        with:
          version: latest
        id: install

      - name: Decrypt secrets
        run: |-
          echo "${{ secrets.AGE_KEYS }}" > keys.txt
          export SOPS_AGE_KEY_FILE=keys.txt
          sops --decrypt -d secret.enc.yaml > ./manifests/secret.yaml
        working-directory: ./Part3/Exercise3.04

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy
        run: |-
          kubectl create namespace ${GITHUB_REF#refs/heads/} || true
          kubectl config set-context --current --namespace=${GITHUB_REF#refs/heads/}
          kustomize edit set namespace ${GITHUB_REF#refs/heads/}
          kustomize edit set image PROJECT/IMAGE/PROJECT=gcr.io/$PROJECT_ID/$IMAGE/project:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image PROJECT/IMAGE/TODO-BACKEND=gcr.io/$PROJECT_ID/$IMAGE/todo-backend:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image PROJECT/IMAGE/TODO-DB=gcr.io/$PROJECT_ID/$IMAGE/todo-db:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize edit set image PROJECT/IMAGE/TODO-JOB=gcr.io/$PROJECT_ID/$IMAGE/todo-job:${GITHUB_REF#refs/heads/}-$GITHUB_SHA
          kustomize build . | kubectl apply -f -
          kubectl get services -o wide
        working-directory: ./Part3/Exercise3.04

